
## Set up python to check code formatting python. Plus puppet code checking and some general checks.

### Install:
1. `pip install pre-commit`
2. Add a pre-commit configuration:
    - create a file named .pre-commit-config.yaml in your git working directory;
    - you can generate a very basic configuration using pre-commit sample-config;
    - this example uses a formatter for python, puppet code, however pre-commit works for any programming language.
  `.pre-commit-config.yaml`:
```
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
# general checks
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
    -   id: check-added-large-files
# python cheks
-   repo: https://github.com/psf/black
    rev: 22.10.0
    hooks:
    -   id: black
# puppet cheks
-   repo: local
    hooks:
    -   id: puppet-lint
        name: puppet-lint
        entry: puppet-lint --config=puppet-lint.rc
        language: system
        types: [puppet]
```
3. Run `pre-commit install` to set up the git hook scripts
4. Run against all the files `pre-commit run --all-files` (optional)
    - "it's usually a good idea to run the hooks against all of the files when adding new hooks (usually pre-commit will only run on the changed files during git hooks)"
5. Run `apt install puppet-lint` - to check the puppet code, you need to install puppet-lint.
